name: Deploy CloudFormation Stacks

on:
  release:
    types: [published]
  workflow_dispatch:

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  create-s3-bucket:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ secrets.cloudformation_role_arn }}
        aws-region: ${{ secrets.aws_region }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      id: init
      working-directory: ecr
      run: terraform init

    - name: Terraform Apply
      id: plan
      working-directory: ecr
      run: terraform plan -no-color
      continue-on-error: true

    # - name: Deploy ECR
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     role-to-assume: ${{ secrets.cloudformation_role_arn }}
    #     aws-region: ${{ secrets.aws_region }}

    # # The following will fail with the error `Error: ResourceNotFoundException: Secrets Manager can't find the specified secret..` if it does not exist.
    # - name: Check Secrets Exist in AWS
    #   uses: aws-actions/aws-secretsmanager-get-secrets@v2
    #   with:
    #     secret-ids: |
    #       instagram_password
    #       instagram_username
    #       square_application_id
    #       square_access_token

    # - name: Deploy S3 Bucket for lambda functions
    #   id: deploy-s3
    #   uses: aws-actions/aws-cloudformation-github-deploy@v1
    #   with:
    #     name: LambdaFunctionsBucket
    #     template: cloudformation/S3Bucket.yml
    #     no-fail-on-empty-changeset: "1"
    #     capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM

    # - name: S3 Bucket Name
    #   run: echo ${{ steps.deploy-s3.outputs['BucketName'] }}

    # - name: Package lambda functions with dependencies
    #   shell: bash
    #   run: |
    #     mkdir deploy
    #     cd python
    #     pip install squareup ensta --target .
    #     zip -r ../deploy/pkg.zip *

    # - name: Deploy code to S3
    #   run: aws s3 sync ./deploy s3://${{ steps.deploy-s3.outputs['BucketName'] }} --delete

    # - name: Get package version
    #   id: package-version
    #   run: |
    #     version=`aws s3api list-object-versions --bucket ${{ steps.deploy-s3.outputs['BucketName'] }} --prefix pkg.zip --query 'Versions[?IsLatest].[VersionId]' --output text`
    #     echo $version
    #     echo "version=$version" >> $GITHUB_OUTPUT

    # - name: Deploy template to AWS CloudFormation
    #   uses: aws-actions/aws-cloudformation-github-deploy@v1
    #   with:
    #     name: AddInstagramUser
    #     template: cloudformation/AddInstagramUser.yml
    #     no-fail-on-empty-changeset: "1"
    #     capabilities: CAPABILITY_IAM,CAPABILITY_NAMED_IAM
    #     parameter-overrides: >-
    #       LambdaFunctionsBucketName=${{ steps.deploy-s3.outputs['BucketName'] }}, PackageVersion=${{ steps.package-version.outputs.version }}
