name: Deploy Square Instagram Integration

on:
  release:
    types: [published]
  workflow_dispatch:
  push:

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  deploy-square-ig:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ vars.cicd_role_arn }}
        aws-region: ${{ vars.aws_region }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init ECR
      working-directory: ecr
      run: terraform init

    - name: Terraform Apply ECR
      working-directory: ecr
      run: terraform apply -auto-approve -var aws_region=${{ vars.aws_region }}

    - name: Get ECR URL
      working-directory: ecr
      run: echo "ECR_REPO_URL=$(terraform output -raw ecr_repo_url)" >> $GITHUB_ENV

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      # REMOVE THIS
      with:
        mask-password: 'false'

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up docker buildx
      uses: docker/setup-buildx-action@v2

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.ecr-login.outputs.registry }}/${{ env.IMAGE_NAME }}

    - name: Build and push
      id: image-build
      uses: docker/build-push-action@v6
      with:
        platforms: linux/arm64
        context: "image"
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        provenance: false

    - name: Echo Image ID
      run: echo ${{ env.ECR_REPO_URL }}@${{ steps.image-build.outputs.digest }}

    - name: Terraform Init Full Stack
      working-directory: full-stack
      run: terraform init

    - name: Terraform Apply Full Stack
      working-directory: full-stack
      run: |
        terraform apply -auto-approve \
          -var lambda_image="${{ env.ECR_REPO_URL }}@${{ steps.image-build.outputs.digest }}" \
          -var aws_region=${{ vars.aws_region }}

    # # The following will fail with the error `Error: ResourceNotFoundException: Secrets Manager can't find the specified secret..` if it does not exist.
    # - name: Check Secrets Exist in AWS
    #   uses: aws-actions/aws-secretsmanager-get-secrets@v2
    #   with:
    #     secret-ids: |
    #       instagram_password
    #       instagram_username
    #       square_application_id
    #       square_access_token

  deploy-static-website:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{ vars.cicd_role_arn }}
        aws-region: ${{ vars.aws_region }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      working-directory: static_website
      run: terraform init

    - name: Terraform Apply ECR
      working-directory: static_website
      run: |
        terraform apply -auto-approve \
          -var domain_name="theplantsocietyatx.com" \
          -var porkbun_api_key="${{ secrets.porkbun_api_key }}" \
          -var porkbun_secret_key="${{ secrets.porkbun_secret_key }}" \
          -var aws_region=${{ vars.aws_region }}
